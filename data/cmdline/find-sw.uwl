#@UGENE_WORKFLOW
#Find pattern in supplied sequence using Smith-Waterman algorithm



workflow find-sw{

    read-sequence {
        type:read-sequence;
        name:"Read Reference Sequence";
        url-in {
            dataset:Dataset;
        }
    }
    read-sequence-1 {
        type:read-sequence;
        name:"Read Pattern Sequence";
        url-in {
            dataset:Dataset;
        }
    }
    write-sequence {
        type:write-sequence;
        name:"Write Genbank";
        document-format:genbank;
    }
    ssearch {
        type:ssearch;
        name:"Smith-Waterman Search";
        algorithm:"Classic 2";
    }


    .actor-bindings {
        read-sequence.out-sequence->ssearch.in-sequence
        read-sequence-1.out-sequence->ssearch.pattern
        ssearch.out-annotations->write-sequence.in-sequence
    }

    read-sequence-1.annotations->write-sequence.in-sequence.annotations
    read-sequence.annotations->write-sequence.in-sequence.annotations
    ssearch.annotations->write-sequence.in-sequence.annotations
    read-sequence.sequence->write-sequence.in-sequence.sequence
    read-sequence.sequence->ssearch.in-sequence.sequence
    read-sequence-1.sequence->ssearch.pattern.sequence

    .meta {
        parameter-aliases {
            read-sequence.url-in {
                alias:in;
                description:"Input sequence";
            }
            read-sequence-1.url-in {
                alias:ptrn;
                description:"A subsequence pattern to look for";
            }
            write-sequence.url-out {
                alias:out;
                description:"Output file with annotations";
            }
            ssearch.filter-strategy {
                alias:filter;
                description:"Result filtering strategy";
            }
            ssearch.matrix {
                alias:matrix;
                description:"Scoring matrix";
            }
            ssearch.min-score {
                alias:score;
                description:"The minimum score of the result";
            }
            ssearch.result-name {
                alias:name;
                description:"Name of the result annotations marking found regions";
            }
        }
        visual {
            read-sequence {
                pos:"-777 -517";
                style:ext;
                bg-color-ext:"0 128 128 64";
                out-sequence.angle:358.047;
            }
            read-sequence-1 {
                pos:"-778 -370";
                style:ext;
                bg-color-ext:"0 128 128 64";
                out-sequence.angle:360;
            }
            ssearch {
                pos:"-572 -520";
                style:ext;
                bg-color-ext:"0 128 128 64";
                in-sequence.angle:189.782;
                out-annotations.angle:329.243;
                pattern.angle:258.69;
            }
            write-sequence {
                pos:"-262 -430";
                style:ext;
                bg-color-ext:"0 128 128 64";
                in-sequence.angle:180;
            }
            read-sequence-1.out-sequence->ssearch.pattern {
                text-pos:"-29.8281 -28";
            }
            read-sequence.out-sequence->ssearch.in-sequence {
                text-pos:"-33.8281 -28";
            }
            ssearch.out-annotations->write-sequence.in-sequence {
                text-pos:"-42 -42";
            }
        }
    }
}

