#@UGENE_WORKFLOW
#Convert input sequence into its reverse, complement or reverse-complement counterpart and write result sequence to file



workflow revcompl{

    reverse-complement {
        type:reverse-complement;
        name:"Reverse Complement";
    }
    read-sequence {
        type:read-sequence;
        name:"Read sequence";
        url-in {
            dataset:"Dataset 1";
        }
    }
    write-sequence {
        type:write-sequence;
        name:"Write sequence";
    }


    .actor-bindings {
        reverse-complement.out-sequence->write-sequence.in-sequence
        read-sequence.out-sequence->reverse-complement.in-sequence
    }

    read-sequence.sequence->reverse-complement.in-sequence.sequence
    read-sequence.annotations->write-sequence.in-sequence.annotations
    reverse-complement.sequence->write-sequence.in-sequence.sequence

    .meta {
        parameter-aliases {
            reverse-complement.op-type {
                alias:type;
                description:"Type of operation. Available are 'Reverse Complement', 'Complement' and 'Reverse' (using 'Reverse Complement' by default)";
            }
            read-sequence.url-in {
                alias:in;
                description:"Input file";
            }
            write-sequence.accumulate {
                alias:accumulate;
                description:"Accumulate all incoming data in one file or create separate files for each input. In the latter case, an incremental numerical suffix is added to the file name (using 'True' by default)";
            }
            write-sequence.document-format {
                alias:format;
                description:"Output file format (using 'fasta' by default)";
            }
            write-sequence.split {
                alias:split;
                description:"Split each incoming sequence on several parts (using '1' by default)";
            }
            write-sequence.url-out {
                alias:out;
                description:"Output file";
            }
        }
        visual {
            read-sequence {
                pos:"-705 -585";
                style:ext;
                bg-color-ext:"0 128 128 64";
                out-sequence.angle:360;
            }
            reverse-complement {
                pos:"-525 -585";
                style:ext;
                bg-color-ext:"0 128 128 64";
                in-sequence.angle:180;
                out-sequence.angle:360;
            }
            write-sequence {
                pos:"-285 -585";
                style:ext;
                bg-color-ext:"0 128 128 64";
                in-sequence.angle:180;
            }
            read-sequence.out-sequence->reverse-complement.in-sequence {
                text-pos:"-27.5 -24";
            }
            reverse-complement.out-sequence->write-sequence.in-sequence {
                text-pos:"-45 -37";
            }
        }
    }
}

