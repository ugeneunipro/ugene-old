#@UGENE_WORKFLOW
#Call variants for an input assembly and a reference sequence using SAMtools mpileup and bcftool



workflow "Call variants with SAMtools"{

    read-assembly {
        type:read-assembly;
        name:"Read Assembly (BAM/SAM)";
        url-in {
            dataset:Dataset;
        }
    }
    read-sequence {
        type:get-file-list;
        name:"Read Sequence";
        url-in {
            dataset:Dataset;
        }
    }
    write-variations {
        type:write-variations;
        name:"Write Variations";
        accumulate:false;
        url-out:variations.snp;
        write-mode:0;
    }
    call_variants {
        type:call_variants;
        name:"Call Variants";
    }
    files-conversion-1 {
        type:files-conversion;
        name:"File Conversion";
        document-format:fasta;
    }


    .actor-bindings {
        read-sequence.out-url->files-conversion-1.in-file
        call_variants.out-variations->write-variations.in-variations
        files-conversion-1.out-file->call_variants.in-sequence
        read-assembly.out-assembly->call_variants.in-assembly
    }

    call_variants.variation-track->write-variations.in-variations.variation-track
    read-assembly.assembly->call_variants.in-assembly.assembly
    read-assembly.dataset->call_variants.in-assembly.dataset
    read-assembly.url->call_variants.in-assembly.url
    files-conversion-1.url->call_variants.in-sequence.url
    read-sequence.url->files-conversion-1.in-file.url

    .meta {
        visual {
            call_variants {
                pos:"-460 -495";
                style:ext;
                bg-color-ext:"0 128 128 64";
                in-assembly.angle:150;
                in-sequence.angle:207.181;
                out-variations.angle:360;
            }
            files-conversion-1 {
                pos:"-587 -456";
                style:simple;
                in-file.angle:196.858;
                out-file.angle:15.3885;
            }
            read-assembly {
                pos:"-801 -554";
                style:ext;
                bg-color-ext:"0 128 128 64";
                out-assembly.angle:360;
            }
            read-sequence {
                pos:"-801 -419";
                style:ext;
                bg-color-ext:"0 128 128 64";
                bounds:"-30 -30 71.25 84";
                out-url.angle:360;
            }
            write-variations {
                pos:"-156 -495";
                style:ext;
                bg-color-ext:"0 128 128 64";
                in-variations.angle:180;
            }
            call_variants.out-variations->write-variations.in-variations {
                text-pos:"-49 -43";
            }
            files-conversion-1.out-file->call_variants.in-sequence {
                text-pos:"-19 -31";
            }
            read-assembly.out-assembly->call_variants.in-assembly {
                text-pos:"-26.5 -30";
            }
            read-sequence.out-url->files-conversion-1.in-file {
                text-pos:"-45 -32";
            }
        }
        estimations {
function samtoolsTime(bam, ref) {
                return (ref/236) * (25*bam + 4);
            }
			function samtoolsRAM(bam, ref) {
                return (ref + 50);
            }
            var bamSets = utils.attributeValue("read-assembly.url-in");
			var refSets = utils.attributeValue("read-sequence.url-in");
            var time = 0;
            var ram = 0;
            for (var i=0; i<bamSets.length; i++) {
                var bamSet = bamSets[i];
                var bam = 0; // size of bams in Mb
                for (var j=0; j<bamSet.length; j++) {
                    var url = bamSet[j];
                    bam += utils.fileSize(url) / (1024*1024);
                }
				var refUrl = refSets[i][0];
				var ref = utils.fileSize(refUrl) / (1024*1024);  // size of ref in Mb
                time += samtoolsTime(bam, ref);
                ram += samtoolsRAM(bam, ref);
            }
            [time, ram];
        }
        wizard {
            name:"Call Variants Wizard";
            page {
                id:1;
                next:2;
                title:"Input reference sequence and assembly";
                parameters-area {
                    group {
                        title:"Input files";
                        lineedit-and-dataset {
                            read-sequence.url-in {
                                label:"Reference sequence file";
                            }
                            read-assembly.url-in {
                                label:"BAM/SAM file";
                            }
                        }
                    }
                }
            }
            page {
                id:2;
                next:3;
                title:"SAMtools <i>mpileup</i> parameters";
                parameters-area {
                    group {
                        title:Parameters;
                        label-size:200;
                        call_variants.use_orphan {
                        }
                        call_variants.disable_baq {
                        }
                        call_variants.capq_thres {
                        }
                        call_variants.max_depth {
                        }
                        call_variants.ext_baq {
                        }
                        call_variants.bed {
                        }
                        call_variants.reg {
                        }
                        call_variants.min_mq {
                        }
                        call_variants.min_baseq {
                        }
                    }
                    group {
                        title:Additional;
                        label-size:200;
                        type:hideable;
                        call_variants.illumina13-encoding {
                        }
                        call_variants.extQ {
                        }
                        call_variants.tandemQ {
                        }
                        call_variants.no_indel {
                        }
                        call_variants.max_indel_depth {
                        }
                        call_variants.openQ {
                        }
                        call_variants.pl_list {
                        }
                    }
                }
            }
            page {
                id:3;
                next:4;
                title:"SAMtools <i>bcftools view</i> parameters";
                parameters-area {
                    group {
                        title:Parameters;
                        label-size:200;
                        call_variants.keepalt {
                        }
                        call_variants.fix_pl {
                        }
                        call_variants.no_geno {
                        }
                        call_variants.acgt_only {
                        }
                        call_variants.bcf_bed {
                        }
                        call_variants.qcall {
                        }
                        call_variants.samples {
                        }
                        call_variants.min_smpl_frac {
                        }
                        call_variants.call_gt {
                        }
                    }
                    group {
                        title:Additional;
                        label-size:200;
                        type:hideable;
                        call_variants.indel_frac {
                        }
                        call_variants.pref {
                        }
                        call_variants.ptype {
                        }
                        call_variants.theta {
                        }
                        call_variants.ccall {
                        }
                        call_variants.n1 {
                        }
                        call_variants.n_perm {
                        }
                        call_variants.min_perm_p {
                        }
                    }
                }
            }
            page {
                id:4;
                next:5;
                title:"SAMtools <i>vcfutils varFilter</i> parameters";
                parameters-area {
                    group {
                        title:Parameters;
                        label-size:200;
                        call_variants.print-filtered {
                        }
                        call_variants.min-qual {
                        }
                        call_variants.min-dep {
                        }
                        call_variants.max-dep {
                        }
                        call_variants.min-alt-bases {
                        }
                        call_variants.gap-size {
                        }
                        call_variants.window {
                        }
                    }
                    group {
                        title:Additional;
                        label-size:200;
                        type:hideable;
                        call_variants.min-strand {
                        }
                        call_variants.min-baseQ {
                        }
                        call_variants.min-mapQ {
                        }
                        call_variants.min-end-distance {
                        }
                        call_variants.min-hwe {
                        }
                    }
                }
            }
            page {
                id:5;
                title:"Output variations";
                parameters-area {
                    group {
                        title:"Output file";
                        label-size:100;
                        write-variations.url-out {
                        }
                        write-variations.document-format {
                        }
                        write-variations.write-mode {
                        }
                    }
                }
            }
        }
    }
}

