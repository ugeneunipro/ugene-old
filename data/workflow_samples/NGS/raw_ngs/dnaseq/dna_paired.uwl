#@UGENE_WORKFLOW
#The workflow takes FASTQ files as input (with paired-end sequencing reads) and process this data as follows:
#  * Pre-processing:
#    - Filtration of the input sequencing reads by the CASAVA header (for Illumina platform).
#    - Cutting of adapter sequences.
#    - Trimming of the sequencing reads by quality.
#
#  * Mapping:
#    - Mapping of the reads to a reference sequence (the BWA-MEM tool is used).
#
#  * Post-processing:
#    - Merging of all data into one file.
#    - Filtration of aligned reads by SAMtools to remove reads with low mapping quality, unpaired/unaligned reads, etc.
#    - Removing of PCR duplicates.
#
#The workflow also performs quality control of the data  with FastQC: first, on the input FASTQ files and, second, after the pre-processing step.
#
#Besides the intermediate files, the final result of the workflow is a filtered, sorted, and indexed BAM file.
#



workflow "Processing of raw DNA-Seq paired-end reads"{

    CASAVAFilter {
        type:CASAVAFilter;
        name:"Filter Reads by CASAVA Header";
        custom-dir:filtered_fastq;
        out-mode:1;
    }
    QualityTrim {
        type:QualityTrim;
        name:"Trim Reads by Quality";
        custom-dir:filtered_fastq;
        out-mode:0;
        len-id:1;
        qual-id:20;
    }
    get-file-list {
        type:get-file-list;
        name:"Read FASTQ Files with Reads 1";
        url-in {
            dataset:"Dataset 1";
        }
    }
    bwamem-id {
        type:bwamem-id;
        name:"Align Reads with BWA MEM";
        library:Paired-end;
        output-dir:ouput;
    }
    files-conversion {
        type:files-conversion;
        name:"Convert to BAM";
        out-mode:0;
        document-format:bam;
    }
    merge-bam {
        type:merge-bam;
        name:"Merge Files";
        out-mode:0;
    }
    filter-bam {
        type:filter-bam;
        name:"Filter Merged BAM File with SAMtools";
        out-mode:0;
        flag:"The read is unmapped";
        mapq:1;
    }
    rmdup-bam {
        type:rmdup-bam;
        name:"Remove Duplicates";
        out-mode:0;
        remove-single-end:true;
    }
    Sort-bam {
        type:Sort-bam;
        name:"Sort BAM File";
        out-mode:0;
    }
    Sort-bam-1 {
        type:Sort-bam;
        name:"Sort BAM File";
        out-mode:0;
    }
    CASAVAFilter-1 {
        type:CASAVAFilter;
        name:"Filter Reads by CASAVA Header";
        custom-dir:filtered_fastq;
        out-mode:1;
    }
    get-file-list-1 {
        type:get-file-list;
        name:"Read FASTQ Files with Reads 2";
        url-in {
            dataset:"Dataset 1";
        }
    }
    QualityTrim-1 {
        type:QualityTrim;
        name:"Trim Reads by Quality";
        custom-dir:filtered_fastq;
        out-mode:0;
        len-id:1;
        qual-id:20;
    }
    CutAdaptFastq {
        type:CutAdaptFastq;
        name:"Cut Adapter";
        out-mode:0;
    }
    CutAdaptFastq-1 {
        type:CutAdaptFastq;
        name:"Cut Adapter";
        out-mode:0;
    }
    fastqc {
        type:fastqc;
        name:"FastQC Quality Control";
        out-mode:1;
    }
    fastqc-1 {
        type:fastqc;
        name:"FastQC Quality Control";
        out-mode:1;
    }
    fastqc-1-1 {
        type:fastqc;
        name:"FastQC Quality Control";
        out-mode:1;
    }
    fastqc-1-2 {
        type:fastqc;
        name:"FastQC Quality Control";
        out-mode:1;
    }

    .actor-bindings {
        CutAdaptFastq.out-file->QualityTrim.in-file
        CutAdaptFastq-1.out-file->QualityTrim-1.in-file
        CASAVAFilter-1.out-file->CutAdaptFastq-1.in-file
        get-file-list.out-url->CASAVAFilter.in-file
        get-file-list.out-url->fastqc.in-file
        CASAVAFilter.out-file->CutAdaptFastq.in-file
        filter-bam.out-file->Sort-bam-1.in-file
        QualityTrim.out-file->bwamem-id.in-data
        QualityTrim.out-file->fastqc-1-1.in-file
        files-conversion.out-file->merge-bam.in-file
        Sort-bam-1.out-file->rmdup-bam.in-file
        bwamem-id.out-data->files-conversion.in-file
        merge-bam.out-file->filter-bam.in-file
        rmdup-bam.out-file->Sort-bam.in-file
        get-file-list-1.out-url->CASAVAFilter-1.in-file
        get-file-list-1.out-url->fastqc-1.in-file
        QualityTrim-1.out-file->bwamem-id.in-data-paired
        QualityTrim-1.out-file->fastqc-1-2.in-file
    }

    get-file-list.url->CASAVAFilter.in-file.url
    CutAdaptFastq.url->QualityTrim.in-file.url
    QualityTrim.url->bwamem-id.in-data.readsurl
    QualityTrim-1.url->bwamem-id.in-data-paired.readspairedurl
    bwamem-id.assembly-out->files-conversion.in-file.url
    files-conversion.url->merge-bam.in-file.url
    merge-bam.url->filter-bam.in-file.url
    Sort-bam-1.url->rmdup-bam.in-file.url
    rmdup-bam.url->Sort-bam.in-file.url
    filter-bam.url->Sort-bam-1.in-file.url
    get-file-list-1.url->CASAVAFilter-1.in-file.url
    CutAdaptFastq-1.url->QualityTrim-1.in-file.url
    CASAVAFilter.url->CutAdaptFastq.in-file.url
    CASAVAFilter-1.url->CutAdaptFastq-1.in-file.url
    get-file-list.url->fastqc.in-file.url
    get-file-list-1.url->fastqc-1.in-file.url
    QualityTrim.url->fastqc-1-1.in-file.url
    QualityTrim-1.url->fastqc-1-2.in-file.url

    .meta {
        parameter-aliases {
            CASAVAFilter.custom-dir {
                alias:casava1_out_dir;
            }
            CASAVAFilter.out-mode {
                alias:casava1_out_dir_type;
            }
            QualityTrim.custom-dir {
                alias:trim_reads1_out_dir;
            }
            QualityTrim.out-mode {
                alias:trim_reads1_out_dir_type;
            }
            get-file-list.url-in {
                alias:in;
            }
            bwamem-id.output-dir {
                alias:dir;
            }
            bwamem-id.reference {
                alias:idx;
            }
            bwamem-id.threads {
                alias:bwa_t;
            }
            CASAVAFilter-1.custom-dir {
                alias:casava2_out_dir;
            }
            CASAVAFilter-1.out-mode {
                alias:casava2_out_dir_type;
            }
            get-file-list-1.url-in {
                alias:in_mate;
            }
            QualityTrim-1.custom-dir {
                alias:trim_reads2_out_dir;
            }
            QualityTrim-1.out-mode {
                alias:trim_reads2_out_dir_type;
            }
            fastqc.custom-dir {
                alias:fasqc1_out_dir;
            }
            fastqc.out-mode {
                alias:fasqc1_out_dir_type;
            }
            fastqc-1.custom-dir {
                alias:fasqc2_out_dir;
            }
            fastqc-1.out-mode {
                alias:fasqc2_out_dir_type;
            }
            fastqc-1-1.custom-dir {
                alias:fasqc3_out_dir;
            }
            fastqc-1-1.out-mode {
                alias:fasqc3_out_dir_type;
            }
            fastqc-1-2.custom-dir {
                alias:fasqc4_out_dir;
            }
            fastqc-1-2.out-mode {
                alias:fasqc4_out_dir_type;
            }
        }
        visual {
            CASAVAFilter {
                pos:"-960 -795";
                style:ext;
                bg-color-ext:"194 0 0 64";
                bounds:"-30 -30 123.875 80";
                in-file.angle:180;
                out-file.angle:360;
            }
            CASAVAFilter-1 {
                pos:"-960 -630";
                style:ext;
                bg-color-ext:"194 0 0 64";
                bounds:"-30 -30 122.875 82";
                in-file.angle:180;
                out-file.angle:360;
            }
            CutAdaptFastq {
                pos:"-690 -795";
                style:ext;
                bg-color-ext:"236 177 178 64";
                in-file.angle:180;
                out-file.angle:360;
            }
            CutAdaptFastq-1 {
                pos:"-690 -630";
                style:ext;
                bg-color-ext:"236 177 178 64";
                in-file.angle:180;
                out-file.angle:360;
            }
            QualityTrim {
                pos:"-405 -795";
                style:ext;
                bg-color-ext:"204 68 102 64";
                in-file.angle:180;
                out-file.angle:360;
            }
            QualityTrim-1 {
                pos:"-405 -630";
                style:ext;
                bg-color-ext:"204 68 102 64";
                in-file.angle:180;
                out-file.angle:360;
            }
            Sort-bam {
                pos:"0 -225";
                style:simple;
                bg-color-simple:"84 84 84 255";
                in-file.angle:180;
                out-file.angle:360;
            }
            Sort-bam-1 {
                pos:"-480 -225";
                style:simple;
                bg-color-simple:"84 84 84 255";
                in-file.angle:90;
                out-file.angle:360;
            }
            bwamem-id {
                pos:"-30 -735";
                style:ext;
                bg-color-ext:"0 128 0 64";
                bounds:"-30 -30 108 135";
                in-data.angle:204.146;
                in-data-paired.angle:243.853;
                out-data.angle:287.162;
            }
            fastqc {
                pos:"-900 -975";
                style:simple;
                in-file.angle:180;
            }
            fastqc-1 {
                pos:"-915 -450";
                style:simple;
                in-file.angle:180;
            }
            fastqc-1-1 {
                pos:"-135 -945";
                style:simple;
                bg-color-simple:"0 128 128 255";
                in-file.angle:232.815;
            }
            fastqc-1-2 {
                pos:"-135 -510";
                style:simple;
                in-file.angle:138.18;
            }
            files-conversion {
                pos:"0 -405";
                style:simple;
                bg-color-simple:"84 84 84 255";
                in-file.angle:83.2902;
                out-file.angle:176.186;
            }
            filter-bam {
                pos:"-525 -435";
                style:ext;
                bg-color-ext:"194 0 0 64";
                bounds:"-30 -30 121.875 79";
                in-file.angle:349.192;
                out-file.angle:298.996;
            }
            get-file-list {
                pos:"-1200 -795";
                style:ext;
                bg-color-ext:"24 102 175 64";
                bounds:"-30 -30 63 87";
                out-url.angle:360;
            }
            get-file-list-1 {
                pos:"-1200 -630";
                style:ext;
                bg-color-ext:"24 102 175 64";
                bounds:"-30 -30 61 92";
                out-url.angle:360;
            }
            merge-bam {
                pos:"-210 -405";
                style:simple;
                bg-color-simple:"78 151 184 255";
                in-file.angle:1.7357;
                out-file.angle:180;
            }
            rmdup-bam {
                pos:"-225 -225";
                style:simple;
                bg-color-simple:"218 98 98 255";
                in-file.angle:180;
                out-file.angle:360;
            }
            CASAVAFilter-1.out-file->CutAdaptFastq-1.in-file {
                text-pos:"-38.75 -24";
            }
            CASAVAFilter.out-file->CutAdaptFastq.in-file {
                text-pos:"-40.75 -25";
            }
            CutAdaptFastq-1.out-file->QualityTrim-1.in-file {
                text-pos:"-35.75 -24";
            }
            CutAdaptFastq.out-file->QualityTrim.in-file {
                text-pos:"-35.75 -24";
            }
            QualityTrim-1.out-file->bwamem-id.in-data-paired {
                text-pos:"-35.75 -24";
            }
            QualityTrim-1.out-file->fastqc-1-2.in-file {
                text-pos:"-22.75 -10";
            }
            QualityTrim.out-file->bwamem-id.in-data {
                text-pos:"-35.75 -24";
            }
            QualityTrim.out-file->fastqc-1-1.in-file {
                text-pos:"-35.75 -24";
            }
            Sort-bam-1.out-file->rmdup-bam.in-file {
                text-pos:"-45 -26";
            }
            bwamem-id.out-data->files-conversion.in-file {
                text-pos:"-38 -24";
            }
            files-conversion.out-file->merge-bam.in-file {
                text-pos:"-1.4531 -24";
            }
            filter-bam.out-file->Sort-bam-1.in-file {
                text-pos:"-94 -22";
            }
            get-file-list-1.out-url->CASAVAFilter-1.in-file {
                text-pos:"-35.7578 -24";
            }
            get-file-list-1.out-url->fastqc-1.in-file {
                text-pos:"-33.7578 18";
            }
            get-file-list.out-url->CASAVAFilter.in-file {
                text-pos:"-35.7578 -24";
            }
            get-file-list.out-url->fastqc.in-file {
                text-pos:"-35.7578 -24";
            }
            merge-bam.out-file->filter-bam.in-file {
                text-pos:"-36 -24";
            }
            rmdup-bam.out-file->Sort-bam.in-file {
                text-pos:"-45 -25";
            }
        }
        wizard {
            name:"Raw DNA-Seq Data Processing Wizard";
            page {
                id:1;
                next:2;
                title:"Input data";
                parameters-area {
                    group {
                        title:"Sequencing reads";
                        label-size:120;
                        get-file-list.url-in {
                            label:"FASTQ files";
                        }
                        get-file-list-1.url-in {
                            label:"FASTQ files with pairs";
                        }
                    }
                }
            }
            page {
                id:2;
                next:3;
                title:Pre-processing;
                parameters-area {
                    group {
                        title:Filtration;
                        label-size:120;
                        QualityTrim.qual-id {
                            label:"Base quality";
                        }
                        QualityTrim.len-id {
                            label:"Reads length";
                        }
                        QualityTrim.both-ends {
                            label:"Trim both ends";
                        }
                        QualityTrim-1.qual-id {
                            label:"Base quality for pairs";
                        }
                        QualityTrim-1.len-id {
                            label:"Reads length for pairs";
                        }
                        QualityTrim-1.both-ends {
                            label:"Trim both ends for pairs";
                        }
                        CutAdaptFastq.adapters-url {
                            label:Adapters;
                        }
                        CutAdaptFastq-1.adapters-url {
                            label:"Adapters for pairs";
                        }
                    }
                }
            }
            page {
                id:3;
                next:4;
                title:Mapping;
                parameters-area {
                    group {
                        title:"BWA-MEM mapping";
                        label-size:120;
                        bwamem-id.reference {
                        }
                        bwamem-id.threads {
                        }
                    }
                    group {
                        title:Advanced;
                        label-size:120;
                        type:hideable;
                        bwamem-id.min-seed {
                        }
                        bwamem-id.band-width {
                        }
                        bwamem-id.dropoff {
                        }
                        bwamem-id.seed-lookup {
                        }
                        bwamem-id.seed-threshold {
                        }
                        bwamem-id.drop-chains {
                        }
                        bwamem-id.mate-rescue {
                        }
                        bwamem-id.skip-mate-rescues {
                        }
                        bwamem-id.skip-pairing {
                        }
                        bwamem-id.match-score {
                        }
                        bwamem-id.mistmatch-penalty {
                        }
                        bwamem-id.gap-open-penalty {
                        }
                        bwamem-id.gap-ext-penalty {
                        }
                        bwamem-id.clipping-penalty {
                        }
                        bwamem-id.inpaired-panalty {
                        }
                        bwamem-id.score-threshold {
                        }
                    }
                }
            }
            page {
                id:4;
                next:5;
                title:Post-processing;
                parameters-area {
                    group {
                        title:Filtration;
                        label-size:120;
                        filter-bam.mapq {
                        }
                        filter-bam.flag {
                        }
                        filter-bam.region {
                        }
                    }
                    group {
                        title:"Remove duplicates";
                        label-size:120;
                        rmdup-bam.remove-single-end {
                            label:"For single-end reads";
                        }
                    }
                }
            }
            page {
                id:5;
                title:"Output data";
                parameters-area {
                    group {
                        title:"Aligned data";
                        label-size:130;
                        bwamem-id.outname {
                        }
                        bwamem-id.output-dir {
                        }
                    }
                    group {
                        title:"Filtered FASTQ";
                        label-size:130;
                        type:hideable;
                        CASAVAFilter.out-mode {
                        }
                        CASAVAFilter.custom-dir {
                        }
                    }
                }
            }
        }
    }
}

