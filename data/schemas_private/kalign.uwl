#!UGENE_WORKFLOW
#Schema is used to run kalign in separate process

workflow "Align with Kalign"{

    read-msa {
        type:read-msa;
        name:"Read alignment";
    }
    write-msa {
        type:write-msa;
        name:"Write alignment";
        document-format:clustal;
        write-mode:1;
    }
    kalign {
        type:kalign;
        name:"Align with Kalign";
        bonus-score:0.02;
        gap-ext-penalty:8.52;
        gap-open-penalty:54.9;
        terminal-gap-penalty:4.42;
    }

    kalign.msa->write-msa.in-msa.msa
    read-msa.msa->kalign.in-msa.msa

    .meta {
        aliases {
            read-msa.url-in:in;
            write-msa.document-format:format;
            write-msa.url-out:out;
            kalign.bonus-score:bonus-score;
            kalign.gap-ext-penalty:gap-ext-penalty;
            kalign.gap-open-penalty:gap-open-penalty;
            kalign.terminal-gap-penalty:gap-terminal-penalty;
        }
        visual {
            read-msa {
                pos:"-795 -510";
                style:ext;
                bg-color-ext:"0 128 128 64";
                out-msa.angle:360;
            }
            write-msa {
                pos:"-345 -510";
                style:ext;
                bg-color-ext:"0 128 128 64";
                in-msa.angle:180;
            }
            kalign {
                pos:"-570 -510";
                style:ext;
                bg-color-ext:"0 128 128 64";
                in-msa.angle:180;
                out-msa.angle:360;
            }
            read-msa.out-msa->kalign.in-msa {
                text-pos:"-45 -50";
            }
            kalign.out-msa->write-msa.in-msa {
                text-pos:"-45 -24";
            }
        }
    }
}

